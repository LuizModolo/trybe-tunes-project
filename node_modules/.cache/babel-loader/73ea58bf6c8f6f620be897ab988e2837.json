{"ast":null,"code":"var _jsxFileName = \"/Users/luizmodolo/trybe/projects/sd-015-a-project-trybetunes/src/pages/Favorites.jsx\";\nimport React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Favorites extends Component {\n  constructor() {\n    super();\n\n    this.handleCheckbox = async ({\n      target\n    }) => {\n      this.setState({\n        loading: true\n      }, async () => {\n        const {\n          favoriteList\n        } = this.state;\n        const objMusic = favoriteList.find(music => Number(target.id) === Number(music.trackId));\n\n        if (target.checked) {\n          await addSong(objMusic);\n          this.setState(() => ({\n            loading: false\n          }));\n        } else {\n          await removeSong(objMusic);\n          this.setState(() => ({\n            loading: false\n          }));\n        }\n\n        await this.handleSavedList();\n      });\n    };\n\n    this.handleSavedList = async () => {\n      this.setState({\n        loading: true\n      }, async () => {\n        const savedList = await getFavoriteSongs();\n        this.setState({\n          loading: false,\n          favoriteList: savedList\n        });\n      });\n    };\n\n    this.state = {\n      loading: false,\n      favoriteList: []\n    };\n  }\n\n  componentDidMount() {\n    this.handleSavedList();\n  }\n\n  render() {\n    const {\n      loading,\n      favoriteList\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-favorites\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"M\\xFAsicas Favoritas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: favoriteList.map(music => /*#__PURE__*/_jsxDEV(MusicCard, {\n            music: music // funcFavSong={ this.handleCheckbox }\n            // checkIsFav={ this.musicIsFavorite(music.trackId) }\n\n          }, music.trackId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 45\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Favorites;","map":{"version":3,"sources":["/Users/luizmodolo/trybe/projects/sd-015-a-project-trybetunes/src/pages/Favorites.jsx"],"names":["React","Component","Header","Loading","MusicCard","Favorites","constructor","handleCheckbox","target","setState","loading","favoriteList","state","objMusic","find","music","Number","id","trackId","checked","addSong","removeSong","handleSavedList","savedList","getFavoriteSongs","componentDidMount","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,WAAW,GAAG;AACZ;;AADY,SAadC,cAbc,GAaG,OAAO;AAAEC,MAAAA;AAAF,KAAP,KAAsB;AACrC,WAAKC,QAAL,CACE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADF,EAEE,YAAY;AACV,cAAM;AAAEC,UAAAA;AAAF,YAAmB,KAAKC,KAA9B;AACA,cAAMC,QAAQ,GAAGF,YAAY,CAC1BG,IADc,CACRC,KAAD,IAAWC,MAAM,CAACR,MAAM,CAACS,EAAR,CAAN,KAAsBD,MAAM,CAACD,KAAK,CAACG,OAAP,CAD9B,CAAjB;;AAEA,YAAIV,MAAM,CAACW,OAAX,EAAoB;AAClB,gBAAMC,OAAO,CAACP,QAAD,CAAb;AACA,eAAKJ,QAAL,CAAc,OAAO;AACnBC,YAAAA,OAAO,EAAE;AADU,WAAP,CAAd;AAGD,SALD,MAKO;AACL,gBAAMW,UAAU,CAACR,QAAD,CAAhB;AACA,eAAKJ,QAAL,CAAc,OAAO;AACnBC,YAAAA,OAAO,EAAE;AADU,WAAP,CAAd;AAGD;;AACD,cAAM,KAAKY,eAAL,EAAN;AACD,OAlBH;AAoBD,KAlCa;;AAAA,SAoCdA,eApCc,GAoCI,YAAY;AAC5B,WAAKb,QAAL,CACE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADF,EAEE,YAAY;AACV,cAAMa,SAAS,GAAG,MAAMC,gBAAgB,EAAxC;AACA,aAAKf,QAAL,CAAe;AACbC,UAAAA,OAAO,EAAE,KADI;AAEbC,UAAAA,YAAY,EAAEY;AAFD,SAAf;AAID,OARH;AAUD,KA/Ca;;AAGZ,SAAKX,KAAL,GAAa;AACXF,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AAEDc,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,eAAL;AACD;;AAsCDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAA4B,KAAKC,KAAvC;AACA,wBACE;AAAK,qBAAY,gBAAjB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBACN;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBACGC,YAAY,CAACgB,GAAb,CAAkBZ,KAAD,iBAAY,QAAC,SAAD;AAE5B,YAAA,KAAK,EAAGA,KAFoB,CAG5B;AACA;;AAJ4B,aACtBA,KAAK,CAACG,OADgB;AAAA;AAAA;AAAA;AAAA,kBAA7B;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAtE+B;;AAyElC,eAAeb,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\n\nclass Favorites extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      favoriteList: [],\n    };\n  }\n\n  componentDidMount() {\n    this.handleSavedList();\n  }\n\n  handleCheckbox = async ({ target }) => {\n    this.setState(\n      { loading: true },\n      async () => {\n        const { favoriteList } = this.state;\n        const objMusic = favoriteList\n          .find((music) => Number(target.id) === Number(music.trackId));\n        if (target.checked) {\n          await addSong(objMusic);\n          this.setState(() => ({\n            loading: false,\n          }));\n        } else {\n          await removeSong(objMusic);\n          this.setState(() => ({\n            loading: false,\n          }));\n        }\n        await this.handleSavedList();\n      },\n    );\n  }\n\n  handleSavedList = async () => {\n    this.setState(\n      { loading: true },\n      async () => {\n        const savedList = await getFavoriteSongs();\n        this.setState(({\n          loading: false,\n          favoriteList: savedList,\n        }));\n      },\n    );\n  }\n\n  render() {\n    const { loading, favoriteList } = this.state;\n    return (\n      <div data-testid=\"page-favorites\">\n        <Header />\n        {loading ? <Loading /> : (\n          <div>\n            <h2>MÃºsicas Favoritas</h2>\n            <div>\n              {favoriteList.map((music) => (<MusicCard\n                key={ music.trackId }\n                music={ music }\n                // funcFavSong={ this.handleCheckbox }\n                // checkIsFav={ this.musicIsFavorite(music.trackId) }\n              />))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n"]},"metadata":{},"sourceType":"module"}