{"ast":null,"code":"var _jsxFileName = \"/Users/luizmodolo/trybe/projects/trybe-tunes/src/pages/Favorites.jsx\";\nimport React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Favorites extends Component {\n  constructor() {\n    super();\n\n    this.handleCheckbox = async ({\n      target\n    }) => {\n      this.setState({\n        loading: true\n      }, async () => {\n        const {\n          favoriteList\n        } = this.state;\n        const objMusic = favoriteList.find(music => Number(target.id) === Number(music.trackId));\n\n        if (target.checked) {\n          await addSong(objMusic);\n          this.setState(() => ({\n            loading: false\n          }));\n        } else {\n          await removeSong(objMusic);\n          this.setState(() => ({\n            loading: false\n          }));\n        }\n\n        await this.handleSavedList();\n      });\n    };\n\n    this.musicIsFavorite = trackIdParam => {\n      const {\n        favoriteList\n      } = this.state;\n      const favMusicOk = favoriteList.some(favMusic => favMusic.trackId === trackIdParam);\n      return favMusicOk;\n    };\n\n    this.handleSavedList = async () => {\n      this.setState({\n        loading: true\n      }, async () => {\n        const savedList = await getFavoriteSongs();\n        this.setState({\n          loading: false,\n          favoriteList: savedList\n        });\n      });\n    };\n\n    this.state = {\n      loading: false,\n      favoriteList: []\n    };\n  }\n\n  componentDidMount() {\n    this.handleSavedList();\n  }\n\n  render() {\n    const {\n      loading,\n      favoriteList\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-favorites\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"favorits-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"M\\xFAsicas Favoritas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-album\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"album-cart2\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://cdn.mensagenscomamor.com/content/images/m000513979.jpg?v=1&w=564&h=564\",\n              alt: \"minha-playlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              \"data-testid\": \"album-name\",\n              children: \"My Playlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              \"data-testid\": \"artist-name\",\n              children: \"Minhas m\\xFAsicas favoritas!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"music-album-list\",\n            children: favoriteList.map(music => /*#__PURE__*/_jsxDEV(MusicCard, {\n              music: music,\n              funcFavSong: this.handleCheckbox,\n              checkIsFav: this.musicIsFavorite(music.trackId)\n            }, music.trackId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 47\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Favorites;","map":{"version":3,"sources":["/Users/luizmodolo/trybe/projects/trybe-tunes/src/pages/Favorites.jsx"],"names":["React","Component","Header","Loading","MusicCard","addSong","getFavoriteSongs","removeSong","Favorites","constructor","handleCheckbox","target","setState","loading","favoriteList","state","objMusic","find","music","Number","id","trackId","checked","handleSavedList","musicIsFavorite","trackIdParam","favMusicOk","some","favMusic","savedList","componentDidMount","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\n\nclass Favorites extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      favoriteList: [],\n    };\n  }\n\n  componentDidMount() {\n    this.handleSavedList();\n  }\n\n  handleCheckbox = async ({ target }) => {\n    this.setState(\n      { loading: true },\n      async () => {\n        const { favoriteList } = this.state;\n        const objMusic = favoriteList\n          .find((music) => Number(target.id) === Number(music.trackId));\n        if (target.checked) {\n          await addSong(objMusic);\n          this.setState(() => ({\n            loading: false,\n          }));\n        } else {\n          await removeSong(objMusic);\n          this.setState(() => ({\n            loading: false,\n          }));\n        }\n        await this.handleSavedList();\n      },\n    );\n  }\n\n  musicIsFavorite = (trackIdParam) => {\n    const { favoriteList } = this.state;\n    const favMusicOk = favoriteList.some((favMusic) => favMusic.trackId === trackIdParam);\n    return favMusicOk;\n  }\n\n  handleSavedList = async () => {\n    this.setState(\n      { loading: true },\n      async () => {\n        const savedList = await getFavoriteSongs();\n        this.setState(({\n          loading: false,\n          favoriteList: savedList,\n        }));\n      },\n    );\n  }\n\n  render() {\n    const { loading, favoriteList } = this.state;\n    return (\n      <div data-testid=\"page-favorites\">\n        <Header />\n        {loading ? <Loading /> : (\n          <div className='favorits-list'>\n            <h2>MÃºsicas Favoritas</h2>\n            <div className='main-album'>\n              <div className='album-cart2'>\n                <img src='https://cdn.mensagenscomamor.com/content/images/m000513979.jpg?v=1&w=564&h=564' alt='minha-playlist' />\n                <h1 data-testid=\"album-name\">My Playlist</h1>\n                <h3 data-testid=\"artist-name\">Minhas mÃºsicas favoritas!</h3>\n              </div>\n              <div className='music-album-list'>\n                {favoriteList.map((music) => (<MusicCard\n                  key={ music.trackId }\n                  music={ music }\n                  funcFavSong={ this.handleCheckbox }\n                  checkIsFav={ this.musicIsFavorite(music.trackId) }\n                />))}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n"]},"metadata":{},"sourceType":"module"}